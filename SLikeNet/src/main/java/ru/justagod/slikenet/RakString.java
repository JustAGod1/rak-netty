/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package ru.justagod.slikenet;

public class RakString {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected RakString(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(RakString obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        SLikeNetJNI.delete_RakString(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public RakString() {
    this(SLikeNetJNI.new_RakString__SWIG_0(), true);
  }

  public RakString(char input) {
    this(SLikeNetJNI.new_RakString__SWIG_1(input), true);
  }

  public RakString(short input) {
    this(SLikeNetJNI.new_RakString__SWIG_2(input), true);
  }

  public RakString(String format) {
    this(SLikeNetJNI.new_RakString__SWIG_3(format), true);
  }

  public RakString(RakString rhs) {
    this(SLikeNetJNI.new_RakString__SWIG_4(RakString.getCPtr(rhs), rhs), true);
  }

  public String C_String() {
    return SLikeNetJNI.RakString_C_String(swigCPtr, this);
  }

  public String C_StringUnsafe() {
    return SLikeNetJNI.RakString_C_StringUnsafe(swigCPtr, this);
  }

  public long Find(String stringToFind, long pos) {
    return SLikeNetJNI.RakString_Find__SWIG_0(swigCPtr, this, stringToFind, pos);
  }

  public long Find(String stringToFind) {
    return SLikeNetJNI.RakString_Find__SWIG_1(swigCPtr, this, stringToFind);
  }

  public String ToLower() {
    return SLikeNetJNI.RakString_ToLower(swigCPtr, this);
  }

  public String ToUpper() {
    return SLikeNetJNI.RakString_ToUpper(swigCPtr, this);
  }

  public void Set(String format) {
    SLikeNetJNI.RakString_Set(swigCPtr, this, format);
  }

  public RakString Assign(String str, long pos, long n) {
    return new RakString(SLikeNetJNI.RakString_Assign(swigCPtr, this, str, pos, n), true);
  }

  public boolean IsEmpty() {
    return SLikeNetJNI.RakString_IsEmpty(swigCPtr, this);
  }

  public long GetLength() {
    return SLikeNetJNI.RakString_GetLength(swigCPtr, this);
  }

  public long GetLengthUTF8() {
    return SLikeNetJNI.RakString_GetLengthUTF8(swigCPtr, this);
  }

  public void Replace(long index, long count, short c) {
    SLikeNetJNI.RakString_Replace(swigCPtr, this, index, count, c);
  }

  public void SetChar(long index, short c) {
    SLikeNetJNI.RakString_SetChar__SWIG_0(swigCPtr, this, index, c);
  }

  public void SetChar(long index, RakString s) {
    SLikeNetJNI.RakString_SetChar__SWIG_1(swigCPtr, this, index, RakString.getCPtr(s), s);
  }

  public void Truncate(long length) {
    SLikeNetJNI.RakString_Truncate(swigCPtr, this, length);
  }

  public void TruncateUTF8(long length) {
    SLikeNetJNI.RakString_TruncateUTF8(swigCPtr, this, length);
  }

  public RakString SubStr(long index, long count) {
    return new RakString(SLikeNetJNI.RakString_SubStr(swigCPtr, this, index, count), true);
  }

  public void Erase(long index, long count) {
    SLikeNetJNI.RakString_Erase(swigCPtr, this, index, count);
  }

  public void TerminateAtFirstCharacter(char c) {
    SLikeNetJNI.RakString_TerminateAtFirstCharacter(swigCPtr, this, c);
  }

  public void TerminateAtLastCharacter(char c) {
    SLikeNetJNI.RakString_TerminateAtLastCharacter(swigCPtr, this, c);
  }

  public void StartAfterFirstCharacter(char c) {
    SLikeNetJNI.RakString_StartAfterFirstCharacter(swigCPtr, this, c);
  }

  public void StartAfterLastCharacter(char c) {
    SLikeNetJNI.RakString_StartAfterLastCharacter(swigCPtr, this, c);
  }

  public int GetCharacterCount(char c) {
    return SLikeNetJNI.RakString_GetCharacterCount(swigCPtr, this, c);
  }

  public void RemoveCharacter(char c) {
    SLikeNetJNI.RakString_RemoveCharacter(swigCPtr, this, c);
  }

  public static RakString NonVariadic(String str) {
    return new RakString(SLikeNetJNI.RakString_NonVariadic(str), true);
  }

  public static long ToInteger(String str) {
    return SLikeNetJNI.RakString_ToInteger__SWIG_0(str);
  }

  public static long ToInteger(RakString rs) {
    return SLikeNetJNI.RakString_ToInteger__SWIG_1(RakString.getCPtr(rs), rs);
  }

  public static int ReadIntFromSubstring(String str, long pos, long n) {
    return SLikeNetJNI.RakString_ReadIntFromSubstring(str, pos, n);
  }

  public void AppendBytes(String bytes, long count) {
    SLikeNetJNI.RakString_AppendBytes(swigCPtr, this, bytes, count);
  }

  public int StrCmp(RakString rhs) {
    return SLikeNetJNI.RakString_StrCmp(swigCPtr, this, RakString.getCPtr(rhs), rhs);
  }

  public int StrNCmp(RakString rhs, long num) {
    return SLikeNetJNI.RakString_StrNCmp(swigCPtr, this, RakString.getCPtr(rhs), rhs, num);
  }

  public int StrICmp(RakString rhs) {
    return SLikeNetJNI.RakString_StrICmp(swigCPtr, this, RakString.getCPtr(rhs), rhs);
  }

  public void Clear() {
    SLikeNetJNI.RakString_Clear(swigCPtr, this);
  }

  public void Printf() {
    SLikeNetJNI.RakString_Printf(swigCPtr, this);
  }

  public boolean IPAddressMatch(String IP) {
    return SLikeNetJNI.RakString_IPAddressMatch(swigCPtr, this, IP);
  }

  public boolean ContainsNonprintableExceptSpaces() {
    return SLikeNetJNI.RakString_ContainsNonprintableExceptSpaces(swigCPtr, this);
  }

  public boolean IsEmailAddress() {
    return SLikeNetJNI.RakString_IsEmailAddress(swigCPtr, this);
  }

  public RakString URLEncode() {
    return new RakString(SLikeNetJNI.RakString_URLEncode(swigCPtr, this), false);
  }

  public RakString URLDecode() {
    return new RakString(SLikeNetJNI.RakString_URLDecode(swigCPtr, this), false);
  }

  public void SplitURI(RakString header, RakString domain, RakString path) {
    SLikeNetJNI.RakString_SplitURI(swigCPtr, this, RakString.getCPtr(header), header, RakString.getCPtr(domain), domain, RakString.getCPtr(path), path);
  }

  public RakString SQLEscape() {
    return new RakString(SLikeNetJNI.RakString_SQLEscape(swigCPtr, this), false);
  }

  public static RakString FormatForPOST(String uri, String contentType, String body, String extraHeaders) {
    return new RakString(SLikeNetJNI.RakString_FormatForPOST__SWIG_0(uri, contentType, body, extraHeaders), true);
  }

  public static RakString FormatForPOST(String uri, String contentType, String body) {
    return new RakString(SLikeNetJNI.RakString_FormatForPOST__SWIG_1(uri, contentType, body), true);
  }

  public static RakString FormatForPUT(String uri, String contentType, String body, String extraHeaders) {
    return new RakString(SLikeNetJNI.RakString_FormatForPUT__SWIG_0(uri, contentType, body, extraHeaders), true);
  }

  public static RakString FormatForPUT(String uri, String contentType, String body) {
    return new RakString(SLikeNetJNI.RakString_FormatForPUT__SWIG_1(uri, contentType, body), true);
  }

  public static RakString FormatForGET(String uri, String extraHeaders) {
    return new RakString(SLikeNetJNI.RakString_FormatForGET__SWIG_0(uri, extraHeaders), true);
  }

  public static RakString FormatForGET(String uri) {
    return new RakString(SLikeNetJNI.RakString_FormatForGET__SWIG_1(uri), true);
  }

  public static RakString FormatForDELETE(String uri, String extraHeaders) {
    return new RakString(SLikeNetJNI.RakString_FormatForDELETE__SWIG_0(uri, extraHeaders), true);
  }

  public static RakString FormatForDELETE(String uri) {
    return new RakString(SLikeNetJNI.RakString_FormatForDELETE__SWIG_1(uri), true);
  }

  public RakString MakeFilePath() {
    return new RakString(SLikeNetJNI.RakString_MakeFilePath(swigCPtr, this), false);
  }

  public static void FreeMemory() {
    SLikeNetJNI.RakString_FreeMemory();
  }

  public static void FreeMemoryNoMutex() {
    SLikeNetJNI.RakString_FreeMemoryNoMutex();
  }

  public void Serialize(BitStream bs) {
    SLikeNetJNI.RakString_Serialize__SWIG_0(swigCPtr, this, BitStream.getCPtr(bs), bs);
  }

  public static void Serialize(String str, BitStream bs) {
    SLikeNetJNI.RakString_Serialize__SWIG_1(str, BitStream.getCPtr(bs), bs);
  }

  public void SerializeCompressed(BitStream bs, short languageId, boolean writeLanguageId) {
    SLikeNetJNI.RakString_SerializeCompressed__SWIG_0(swigCPtr, this, BitStream.getCPtr(bs), bs, languageId, writeLanguageId);
  }

  public void SerializeCompressed(BitStream bs, short languageId) {
    SLikeNetJNI.RakString_SerializeCompressed__SWIG_1(swigCPtr, this, BitStream.getCPtr(bs), bs, languageId);
  }

  public void SerializeCompressed(BitStream bs) {
    SLikeNetJNI.RakString_SerializeCompressed__SWIG_2(swigCPtr, this, BitStream.getCPtr(bs), bs);
  }

  public static void SerializeCompressed(String str, BitStream bs, short languageId, boolean writeLanguageId) {
    SLikeNetJNI.RakString_SerializeCompressed__SWIG_3(str, BitStream.getCPtr(bs), bs, languageId, writeLanguageId);
  }

  public static void SerializeCompressed(String str, BitStream bs, short languageId) {
    SLikeNetJNI.RakString_SerializeCompressed__SWIG_4(str, BitStream.getCPtr(bs), bs, languageId);
  }

  public static void SerializeCompressed(String str, BitStream bs) {
    SLikeNetJNI.RakString_SerializeCompressed__SWIG_5(str, BitStream.getCPtr(bs), bs);
  }

  public boolean Deserialize(BitStream bs) {
    return SLikeNetJNI.RakString_Deserialize__SWIG_0(swigCPtr, this, BitStream.getCPtr(bs), bs);
  }

  public static boolean Deserialize(String str, BitStream bs) {
    return SLikeNetJNI.RakString_Deserialize__SWIG_1(str, BitStream.getCPtr(bs), bs);
  }

  public boolean DeserializeCompressed(BitStream bs, boolean readLanguageId) {
    return SLikeNetJNI.RakString_DeserializeCompressed__SWIG_0(swigCPtr, this, BitStream.getCPtr(bs), bs, readLanguageId);
  }

  public boolean DeserializeCompressed(BitStream bs) {
    return SLikeNetJNI.RakString_DeserializeCompressed__SWIG_1(swigCPtr, this, BitStream.getCPtr(bs), bs);
  }

  public static boolean DeserializeCompressed(String str, BitStream bs, boolean readLanguageId) {
    return SLikeNetJNI.RakString_DeserializeCompressed__SWIG_2(str, BitStream.getCPtr(bs), bs, readLanguageId);
  }

  public static boolean DeserializeCompressed(String str, BitStream bs) {
    return SLikeNetJNI.RakString_DeserializeCompressed__SWIG_3(str, BitStream.getCPtr(bs), bs);
  }

  public static String ToString(long i) {
    return SLikeNetJNI.RakString_ToString__SWIG_0(i);
  }

  public static String ToString(java.math.BigInteger i) {
    return SLikeNetJNI.RakString_ToString__SWIG_1(i);
  }

  public static long GetSizeToAllocate(long bytes) {
    return SLikeNetJNI.RakString_GetSizeToAllocate(bytes);
  }

  static public class SharedString {
    private transient long swigCPtr;
    protected transient boolean swigCMemOwn;
  
    protected SharedString(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(SharedString obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    @SuppressWarnings("deprecation")
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          SLikeNetJNI.delete_RakString_SharedString(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    public void setRefCountMutex(SimpleMutex value) {
      SLikeNetJNI.RakString_SharedString_refCountMutex_set(swigCPtr, this, SimpleMutex.getCPtr(value), value);
    }
  
    public SimpleMutex getRefCountMutex() {
      long cPtr = SLikeNetJNI.RakString_SharedString_refCountMutex_get(swigCPtr, this);
      return (cPtr == 0) ? null : new SimpleMutex(cPtr, false);
    }
  
    public void setRefCount(long value) {
      SLikeNetJNI.RakString_SharedString_refCount_set(swigCPtr, this, value);
    }
  
    public long getRefCount() {
      return SLikeNetJNI.RakString_SharedString_refCount_get(swigCPtr, this);
    }
  
    public void setBytesUsed(long value) {
      SLikeNetJNI.RakString_SharedString_bytesUsed_set(swigCPtr, this, value);
    }
  
    public long getBytesUsed() {
      return SLikeNetJNI.RakString_SharedString_bytesUsed_get(swigCPtr, this);
    }
  
    public void setBigString(String value) {
      SLikeNetJNI.RakString_SharedString_bigString_set(swigCPtr, this, value);
    }
  
    public String getBigString() {
      return SLikeNetJNI.RakString_SharedString_bigString_get(swigCPtr, this);
    }
  
    public void setC_str(String value) {
      SLikeNetJNI.RakString_SharedString_c_str_set(swigCPtr, this, value);
    }
  
    public String getC_str() {
      return SLikeNetJNI.RakString_SharedString_c_str_get(swigCPtr, this);
    }
  
    public void setSmallString(String value) {
      SLikeNetJNI.RakString_SharedString_smallString_set(swigCPtr, this, value);
    }
  
    public String getSmallString() {
      return SLikeNetJNI.RakString_SharedString_smallString_get(swigCPtr, this);
    }
  
    public SharedString() {
      this(SLikeNetJNI.new_RakString_SharedString(), true);
    }
  
  }

  public static int RakStringComp(RakString key, RakString data) {
    return SLikeNetJNI.RakString_RakStringComp(RakString.getCPtr(key), key, RakString.getCPtr(data), data);
  }

  public static void LockMutex() {
    SLikeNetJNI.RakString_LockMutex();
  }

  public static void UnlockMutex() {
    SLikeNetJNI.RakString_UnlockMutex();
  }

}
