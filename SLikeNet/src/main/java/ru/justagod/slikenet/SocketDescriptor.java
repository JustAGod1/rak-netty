/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package ru.justagod.slikenet;

public class SocketDescriptor {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected SocketDescriptor(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(SocketDescriptor obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        SLikeNetJNI.delete_SocketDescriptor(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public SocketDescriptor() {
    this(SLikeNetJNI.new_SocketDescriptor__SWIG_0(), true);
  }

  public SocketDescriptor(int _port, String _hostAddress) {
    this(SLikeNetJNI.new_SocketDescriptor__SWIG_1(_port, _hostAddress), true);
  }

  public void setPort(int value) {
    SLikeNetJNI.SocketDescriptor_port_set(swigCPtr, this, value);
  }

  public int getPort() {
    return SLikeNetJNI.SocketDescriptor_port_get(swigCPtr, this);
  }

  public void setHostAddress(String value) {
    SLikeNetJNI.SocketDescriptor_hostAddress_set(swigCPtr, this, value);
  }

  public String getHostAddress() {
    return SLikeNetJNI.SocketDescriptor_hostAddress_get(swigCPtr, this);
  }

  public void setSocketFamily(short value) {
    SLikeNetJNI.SocketDescriptor_socketFamily_set(swigCPtr, this, value);
  }

  public short getSocketFamily() {
    return SLikeNetJNI.SocketDescriptor_socketFamily_get(swigCPtr, this);
  }

  public void setRemotePortRakNetWasStartedOn_PS3_PSP2(int value) {
    SLikeNetJNI.SocketDescriptor_remotePortRakNetWasStartedOn_PS3_PSP2_set(swigCPtr, this, value);
  }

  public int getRemotePortRakNetWasStartedOn_PS3_PSP2() {
    return SLikeNetJNI.SocketDescriptor_remotePortRakNetWasStartedOn_PS3_PSP2_get(swigCPtr, this);
  }

  public void setChromeInstance(int value) {
    SLikeNetJNI.SocketDescriptor_chromeInstance_set(swigCPtr, this, value);
  }

  public int getChromeInstance() {
    return SLikeNetJNI.SocketDescriptor_chromeInstance_get(swigCPtr, this);
  }

  public void setBlockingSocket(boolean value) {
    SLikeNetJNI.SocketDescriptor_blockingSocket_set(swigCPtr, this, value);
  }

  public boolean getBlockingSocket() {
    return SLikeNetJNI.SocketDescriptor_blockingSocket_get(swigCPtr, this);
  }

  public void setExtraSocketOptions(long value) {
    SLikeNetJNI.SocketDescriptor_extraSocketOptions_set(swigCPtr, this, value);
  }

  public long getExtraSocketOptions() {
    return SLikeNetJNI.SocketDescriptor_extraSocketOptions_get(swigCPtr, this);
  }

}
