/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package ru.justagod.slikenet;

public class UDPProxyClient extends PluginInterface2 {
  private transient long swigCPtr;

  protected UDPProxyClient(long cPtr, boolean cMemoryOwn) {
    super(SLikeNetJNI.UDPProxyClient_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(UDPProxyClient obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        SLikeNetJNI.delete_UDPProxyClient(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public static UDPProxyClient GetInstance() {
    long cPtr = SLikeNetJNI.UDPProxyClient_GetInstance();
    return (cPtr == 0) ? null : new UDPProxyClient(cPtr, false);
  }

  public static void DestroyInstance(UDPProxyClient i) {
    SLikeNetJNI.UDPProxyClient_DestroyInstance(UDPProxyClient.getCPtr(i), i);
  }

  public UDPProxyClient() {
    this(SLikeNetJNI.new_UDPProxyClient(), true);
  }

  public void SetResultHandler(UDPProxyClientResultHandler rh) {
    SLikeNetJNI.UDPProxyClient_SetResultHandler(swigCPtr, this, UDPProxyClientResultHandler.getCPtr(rh), rh);
  }

  public boolean RequestForwarding(SystemAddress proxyCoordinator, SystemAddress sourceAddress, SystemAddress targetAddressAsSeenFromCoordinator, SWIGTYPE_p_unsigned___int32 timeoutOnNoDataMS, BitStream serverSelectionBitstream) {
    return SLikeNetJNI.UDPProxyClient_RequestForwarding__SWIG_0(swigCPtr, this, SystemAddress.getCPtr(proxyCoordinator), proxyCoordinator, SystemAddress.getCPtr(sourceAddress), sourceAddress, SystemAddress.getCPtr(targetAddressAsSeenFromCoordinator), targetAddressAsSeenFromCoordinator, SWIGTYPE_p_unsigned___int32.getCPtr(timeoutOnNoDataMS), BitStream.getCPtr(serverSelectionBitstream), serverSelectionBitstream);
  }

  public boolean RequestForwarding(SystemAddress proxyCoordinator, SystemAddress sourceAddress, SystemAddress targetAddressAsSeenFromCoordinator, SWIGTYPE_p_unsigned___int32 timeoutOnNoDataMS) {
    return SLikeNetJNI.UDPProxyClient_RequestForwarding__SWIG_1(swigCPtr, this, SystemAddress.getCPtr(proxyCoordinator), proxyCoordinator, SystemAddress.getCPtr(sourceAddress), sourceAddress, SystemAddress.getCPtr(targetAddressAsSeenFromCoordinator), targetAddressAsSeenFromCoordinator, SWIGTYPE_p_unsigned___int32.getCPtr(timeoutOnNoDataMS));
  }

  public boolean RequestForwarding(SystemAddress proxyCoordinator, SystemAddress sourceAddress, RakNetGUID targetGuid, SWIGTYPE_p_unsigned___int32 timeoutOnNoDataMS, BitStream serverSelectionBitstream) {
    return SLikeNetJNI.UDPProxyClient_RequestForwarding__SWIG_2(swigCPtr, this, SystemAddress.getCPtr(proxyCoordinator), proxyCoordinator, SystemAddress.getCPtr(sourceAddress), sourceAddress, RakNetGUID.getCPtr(targetGuid), targetGuid, SWIGTYPE_p_unsigned___int32.getCPtr(timeoutOnNoDataMS), BitStream.getCPtr(serverSelectionBitstream), serverSelectionBitstream);
  }

  public boolean RequestForwarding(SystemAddress proxyCoordinator, SystemAddress sourceAddress, RakNetGUID targetGuid, SWIGTYPE_p_unsigned___int32 timeoutOnNoDataMS) {
    return SLikeNetJNI.UDPProxyClient_RequestForwarding__SWIG_3(swigCPtr, this, SystemAddress.getCPtr(proxyCoordinator), proxyCoordinator, SystemAddress.getCPtr(sourceAddress), sourceAddress, RakNetGUID.getCPtr(targetGuid), targetGuid, SWIGTYPE_p_unsigned___int32.getCPtr(timeoutOnNoDataMS));
  }

  static public class ServerWithPing {
    private transient long swigCPtr;
    protected transient boolean swigCMemOwn;
  
    protected ServerWithPing(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(ServerWithPing obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    @SuppressWarnings("deprecation")
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          SLikeNetJNI.delete_UDPProxyClient_ServerWithPing(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    public void setPing(int value) {
      SLikeNetJNI.UDPProxyClient_ServerWithPing_ping_set(swigCPtr, this, value);
    }
  
    public int getPing() {
      return SLikeNetJNI.UDPProxyClient_ServerWithPing_ping_get(swigCPtr, this);
    }
  
    public void setServerAddress(SystemAddress value) {
      SLikeNetJNI.UDPProxyClient_ServerWithPing_serverAddress_set(swigCPtr, this, SystemAddress.getCPtr(value), value);
    }
  
    public SystemAddress getServerAddress() {
      long cPtr = SLikeNetJNI.UDPProxyClient_ServerWithPing_serverAddress_get(swigCPtr, this);
      return (cPtr == 0) ? null : new SystemAddress(cPtr, false);
    }
  
    public ServerWithPing() {
      this(SLikeNetJNI.new_UDPProxyClient_ServerWithPing(), true);
    }
  
  }

  static public class SenderAndTargetAddress {
    private transient long swigCPtr;
    protected transient boolean swigCMemOwn;
  
    protected SenderAndTargetAddress(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(SenderAndTargetAddress obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    @SuppressWarnings("deprecation")
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          SLikeNetJNI.delete_UDPProxyClient_SenderAndTargetAddress(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    public void setSenderClientAddress(SystemAddress value) {
      SLikeNetJNI.UDPProxyClient_SenderAndTargetAddress_senderClientAddress_set(swigCPtr, this, SystemAddress.getCPtr(value), value);
    }
  
    public SystemAddress getSenderClientAddress() {
      long cPtr = SLikeNetJNI.UDPProxyClient_SenderAndTargetAddress_senderClientAddress_get(swigCPtr, this);
      return (cPtr == 0) ? null : new SystemAddress(cPtr, false);
    }
  
    public void setTargetClientAddress(SystemAddress value) {
      SLikeNetJNI.UDPProxyClient_SenderAndTargetAddress_targetClientAddress_set(swigCPtr, this, SystemAddress.getCPtr(value), value);
    }
  
    public SystemAddress getTargetClientAddress() {
      long cPtr = SLikeNetJNI.UDPProxyClient_SenderAndTargetAddress_targetClientAddress_get(swigCPtr, this);
      return (cPtr == 0) ? null : new SystemAddress(cPtr, false);
    }
  
    public SenderAndTargetAddress() {
      this(SLikeNetJNI.new_UDPProxyClient_SenderAndTargetAddress(), true);
    }
  
  }

  static public class PingServerGroup {
    private transient long swigCPtr;
    protected transient boolean swigCMemOwn;
  
    protected PingServerGroup(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(PingServerGroup obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    @SuppressWarnings("deprecation")
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          SLikeNetJNI.delete_UDPProxyClient_PingServerGroup(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    public void setSata(UDPProxyClient.SenderAndTargetAddress value) {
      SLikeNetJNI.UDPProxyClient_PingServerGroup_sata_set(swigCPtr, this, UDPProxyClient.SenderAndTargetAddress.getCPtr(value), value);
    }
  
    public UDPProxyClient.SenderAndTargetAddress getSata() {
      long cPtr = SLikeNetJNI.UDPProxyClient_PingServerGroup_sata_get(swigCPtr, this);
      return (cPtr == 0) ? null : new UDPProxyClient.SenderAndTargetAddress(cPtr, false);
    }
  
    public void setStartPingTime(SWIGTYPE_p_unsigned___int32 value) {
      SLikeNetJNI.UDPProxyClient_PingServerGroup_startPingTime_set(swigCPtr, this, SWIGTYPE_p_unsigned___int32.getCPtr(value));
    }
  
    public SWIGTYPE_p_unsigned___int32 getStartPingTime() {
      return new SWIGTYPE_p_unsigned___int32(SLikeNetJNI.UDPProxyClient_PingServerGroup_startPingTime_get(swigCPtr, this), true);
    }
  
    public void setCoordinatorAddressForPings(SystemAddress value) {
      SLikeNetJNI.UDPProxyClient_PingServerGroup_coordinatorAddressForPings_set(swigCPtr, this, SystemAddress.getCPtr(value), value);
    }
  
    public SystemAddress getCoordinatorAddressForPings() {
      long cPtr = SLikeNetJNI.UDPProxyClient_PingServerGroup_coordinatorAddressForPings_get(swigCPtr, this);
      return (cPtr == 0) ? null : new SystemAddress(cPtr, false);
    }
  
    public void setServersToPing(SWIGTYPE_p_DataStructures__ListT_SLNet__UDPProxyClient__ServerWithPing_t value) {
      SLikeNetJNI.UDPProxyClient_PingServerGroup_serversToPing_set(swigCPtr, this, SWIGTYPE_p_DataStructures__ListT_SLNet__UDPProxyClient__ServerWithPing_t.getCPtr(value));
    }
  
    public SWIGTYPE_p_DataStructures__ListT_SLNet__UDPProxyClient__ServerWithPing_t getServersToPing() {
      long cPtr = SLikeNetJNI.UDPProxyClient_PingServerGroup_serversToPing_get(swigCPtr, this);
      return (cPtr == 0) ? null : new SWIGTYPE_p_DataStructures__ListT_SLNet__UDPProxyClient__ServerWithPing_t(cPtr, false);
    }
  
    public boolean AreAllServersPinged() {
      return SLikeNetJNI.UDPProxyClient_PingServerGroup_AreAllServersPinged(swigCPtr, this);
    }
  
    public void SendPingedServersToCoordinator(RakPeerInterface rakPeer) {
      SLikeNetJNI.UDPProxyClient_PingServerGroup_SendPingedServersToCoordinator(swigCPtr, this, RakPeerInterface.getCPtr(rakPeer), rakPeer);
    }
  
    public PingServerGroup() {
      this(SLikeNetJNI.new_UDPProxyClient_PingServerGroup(), true);
    }
  
  }

}
