/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package ru.justagod.slikenet;

public class FileList {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected FileList(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(FileList obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        SLikeNetJNI.delete_FileList(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public static FileList GetInstance() {
    long cPtr = SLikeNetJNI.FileList_GetInstance();
    return (cPtr == 0) ? null : new FileList(cPtr, false);
  }

  public static void DestroyInstance(FileList i) {
    SLikeNetJNI.FileList_DestroyInstance(FileList.getCPtr(i), i);
  }

  public FileList() {
    this(SLikeNetJNI.new_FileList(), true);
  }

  public void AddFilesFromDirectory(String applicationDirectory, String subDirectory, boolean writeHash, boolean writeData, boolean recursive, FileListNodeContext context) {
    SLikeNetJNI.FileList_AddFilesFromDirectory(swigCPtr, this, applicationDirectory, subDirectory, writeHash, writeData, recursive, FileListNodeContext.getCPtr(context), context);
  }

  public void Clear() {
    SLikeNetJNI.FileList_Clear(swigCPtr, this);
  }

  public void Serialize(BitStream outBitStream) {
    SLikeNetJNI.FileList_Serialize(swigCPtr, this, BitStream.getCPtr(outBitStream), outBitStream);
  }

  public boolean Deserialize(BitStream inBitStream) {
    return SLikeNetJNI.FileList_Deserialize(swigCPtr, this, BitStream.getCPtr(inBitStream), inBitStream);
  }

  public void ListMissingOrChangedFiles(String applicationDirectory, FileList missingOrChangedFiles, boolean alwaysWriteHash, boolean neverWriteHash) {
    SLikeNetJNI.FileList_ListMissingOrChangedFiles(swigCPtr, this, applicationDirectory, FileList.getCPtr(missingOrChangedFiles), missingOrChangedFiles, alwaysWriteHash, neverWriteHash);
  }

  public void GetDeltaToCurrent(FileList input, FileList output, String dirSubset, String remoteSubdir) {
    SLikeNetJNI.FileList_GetDeltaToCurrent(swigCPtr, this, FileList.getCPtr(input), input, FileList.getCPtr(output), output, dirSubset, remoteSubdir);
  }

  public void PopulateDataFromDisk(String applicationDirectory, boolean writeFileData, boolean writeFileHash, boolean removeUnknownFiles) {
    SLikeNetJNI.FileList_PopulateDataFromDisk(swigCPtr, this, applicationDirectory, writeFileData, writeFileHash, removeUnknownFiles);
  }

  public void FlagFilesAsReferences() {
    SLikeNetJNI.FileList_FlagFilesAsReferences(swigCPtr, this);
  }

  public void WriteDataToDisk(String applicationDirectory) {
    SLikeNetJNI.FileList_WriteDataToDisk(swigCPtr, this, applicationDirectory);
  }

  public void AddFile(String filepath, String filename, FileListNodeContext context) {
    SLikeNetJNI.FileList_AddFile(swigCPtr, this, filepath, filename, FileListNodeContext.getCPtr(context), context);
  }

  public void DeleteFiles(String applicationDirectory) {
    SLikeNetJNI.FileList_DeleteFiles(swigCPtr, this, applicationDirectory);
  }

  public void AddCallback(FileListProgress cb) {
    SLikeNetJNI.FileList_AddCallback(swigCPtr, this, FileListProgress.getCPtr(cb), cb);
  }

  public void RemoveCallback(FileListProgress cb) {
    SLikeNetJNI.FileList_RemoveCallback(swigCPtr, this, FileListProgress.getCPtr(cb), cb);
  }

  public void ClearCallbacks() {
    SLikeNetJNI.FileList_ClearCallbacks(swigCPtr, this);
  }

  public void setFileList(RakNetListFileListNode value) {
    SLikeNetJNI.FileList_fileList_set(swigCPtr, this, RakNetListFileListNode.getCPtr(value), value);
  }

  public RakNetListFileListNode getFileList() {
    long cPtr = SLikeNetJNI.FileList_fileList_get(swigCPtr, this);
    return (cPtr == 0) ? null : new RakNetListFileListNode(cPtr, false);
  }

  public static boolean FixEndingSlash(String str) {
    return SLikeNetJNI.FileList_FixEndingSlash__SWIG_0(str);
  }

  public static boolean FixEndingSlash(String str, long strLength) {
    return SLikeNetJNI.FileList_FixEndingSlash__SWIG_1(str, strLength);
  }

}
