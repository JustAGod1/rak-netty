/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package ru.justagod.slikenet;

public class MessageFilter extends PluginInterface2 {
  private transient long swigCPtr;

  protected MessageFilter(long cPtr, boolean cMemoryOwn) {
    super(SLikeNetJNI.MessageFilter_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(MessageFilter obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        SLikeNetJNI.delete_MessageFilter(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public static MessageFilter GetInstance() {
    long cPtr = SLikeNetJNI.MessageFilter_GetInstance();
    return (cPtr == 0) ? null : new MessageFilter(cPtr, false);
  }

  public static void DestroyInstance(MessageFilter i) {
    SLikeNetJNI.MessageFilter_DestroyInstance(MessageFilter.getCPtr(i), i);
  }

  public MessageFilter() {
    this(SLikeNetJNI.new_MessageFilter(), true);
  }

  public void SetAutoAddNewConnectionsToFilter(int filterSetID) {
    SLikeNetJNI.MessageFilter_SetAutoAddNewConnectionsToFilter(swigCPtr, this, filterSetID);
  }

  public void SetAllowMessageID(boolean allow, int messageIDStart, int messageIDEnd, int filterSetID) {
    SLikeNetJNI.MessageFilter_SetAllowMessageID(swigCPtr, this, allow, messageIDStart, messageIDEnd, filterSetID);
  }

  public void SetAllowRPC4(boolean allow, String uniqueID, int filterSetID) {
    SLikeNetJNI.MessageFilter_SetAllowRPC4(swigCPtr, this, allow, uniqueID, filterSetID);
  }

  public void SetActionOnDisallowedMessage(boolean kickOnDisallowed, boolean banOnDisallowed, SWIGTYPE_p_unsigned___int32 banTimeMS, int filterSetID) {
    SLikeNetJNI.MessageFilter_SetActionOnDisallowedMessage(swigCPtr, this, kickOnDisallowed, banOnDisallowed, SWIGTYPE_p_unsigned___int32.getCPtr(banTimeMS), filterSetID);
  }

  public void SetFilterMaxTime(int allowedTimeMS, boolean banOnExceed, SWIGTYPE_p_unsigned___int32 banTimeMS, int filterSetID) {
    SLikeNetJNI.MessageFilter_SetFilterMaxTime(swigCPtr, this, allowedTimeMS, banOnExceed, SWIGTYPE_p_unsigned___int32.getCPtr(banTimeMS), filterSetID);
  }

  public int GetSystemFilterSet(AddressOrGUID addressOrGUID) {
    return SLikeNetJNI.MessageFilter_GetSystemFilterSet(swigCPtr, this, AddressOrGUID.getCPtr(addressOrGUID), addressOrGUID);
  }

  public void SetSystemFilterSet(AddressOrGUID addressOrGUID, int filterSetID) {
    SLikeNetJNI.MessageFilter_SetSystemFilterSet(swigCPtr, this, AddressOrGUID.getCPtr(addressOrGUID), addressOrGUID, filterSetID);
  }

  public long GetSystemCount(int filterSetID) {
    return SLikeNetJNI.MessageFilter_GetSystemCount(swigCPtr, this, filterSetID);
  }

  public long GetFilterSetCount() {
    return SLikeNetJNI.MessageFilter_GetFilterSetCount(swigCPtr, this);
  }

  public int GetFilterSetIDByIndex(long index) {
    return SLikeNetJNI.MessageFilter_GetFilterSetIDByIndex(swigCPtr, this, index);
  }

  public void DeleteFilterSet(int filterSetID) {
    SLikeNetJNI.MessageFilter_DeleteFilterSet(swigCPtr, this, filterSetID);
  }

}
