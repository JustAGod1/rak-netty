/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package ru.justagod.slikenet;

public class RakNetListTableRow {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected RakNetListTableRow(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(RakNetListTableRow obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        SLikeNetJNI.delete_RakNetListTableRow(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

   

  public RakNetListTableRow() {
    this(SLikeNetJNI.new_RakNetListTableRow__SWIG_0(), true);
  }

  public RakNetListTableRow(RakNetListTableRow original_copy) {
    this(SLikeNetJNI.new_RakNetListTableRow__SWIG_1(RakNetListTableRow.getCPtr(original_copy), original_copy), true);
  }

  public SWIGTYPE_p_Row Get(long position) {
    return new SWIGTYPE_p_Row(SLikeNetJNI.RakNetListTableRow_Get(swigCPtr, this, position), false);
  }

  public void Push(SWIGTYPE_p_Row input, String file, long line) {
    SLikeNetJNI.RakNetListTableRow_Push(swigCPtr, this, SWIGTYPE_p_Row.getCPtr(input), file, line);
  }

  public SWIGTYPE_p_Row Pop() {
    return new SWIGTYPE_p_Row(SLikeNetJNI.RakNetListTableRow_Pop(swigCPtr, this), false);
  }

  public void Insert(SWIGTYPE_p_Row input, long position, String file, long line) {
    SLikeNetJNI.RakNetListTableRow_Insert__SWIG_0(swigCPtr, this, SWIGTYPE_p_Row.getCPtr(input), position, file, line);
  }

  public void Insert(SWIGTYPE_p_Row input, String file, long line) {
    SLikeNetJNI.RakNetListTableRow_Insert__SWIG_1(swigCPtr, this, SWIGTYPE_p_Row.getCPtr(input), file, line);
  }

  public void Replace(SWIGTYPE_p_Row input, SWIGTYPE_p_Row filler, long position, String file, long line) {
    SLikeNetJNI.RakNetListTableRow_Replace__SWIG_0(swigCPtr, this, SWIGTYPE_p_Row.getCPtr(input), SWIGTYPE_p_Row.getCPtr(filler), position, file, line);
  }

  public void Replace(SWIGTYPE_p_Row input) {
    SLikeNetJNI.RakNetListTableRow_Replace__SWIG_1(swigCPtr, this, SWIGTYPE_p_Row.getCPtr(input));
  }

  public void RemoveAtIndex(long position) {
    SLikeNetJNI.RakNetListTableRow_RemoveAtIndex(swigCPtr, this, position);
  }

  public void RemoveAtIndexFast(long position) {
    SLikeNetJNI.RakNetListTableRow_RemoveAtIndexFast(swigCPtr, this, position);
  }

  public void RemoveFromEnd(long num) {
    SLikeNetJNI.RakNetListTableRow_RemoveFromEnd__SWIG_0(swigCPtr, this, num);
  }

  public void RemoveFromEnd() {
    SLikeNetJNI.RakNetListTableRow_RemoveFromEnd__SWIG_1(swigCPtr, this);
  }

  public long Size() {
    return SLikeNetJNI.RakNetListTableRow_Size(swigCPtr, this);
  }

  public void Clear(boolean doNotDeallocateSmallBlocks, String file, long line) {
    SLikeNetJNI.RakNetListTableRow_Clear(swigCPtr, this, doNotDeallocateSmallBlocks, file, line);
  }

  public void Preallocate(long countNeeded, String file, long line) {
    SLikeNetJNI.RakNetListTableRow_Preallocate(swigCPtr, this, countNeeded, file, line);
  }

  public void Compress(String file, long line) {
    SLikeNetJNI.RakNetListTableRow_Compress(swigCPtr, this, file, line);
  }

}
