/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package ru.justagod.slikenet;

public class NatPunchthroughServer extends PluginInterface2 {
  private transient long swigCPtr;

  protected NatPunchthroughServer(long cPtr, boolean cMemoryOwn) {
    super(SLikeNetJNI.NatPunchthroughServer_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(NatPunchthroughServer obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        SLikeNetJNI.delete_NatPunchthroughServer(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public static NatPunchthroughServer GetInstance() {
    long cPtr = SLikeNetJNI.NatPunchthroughServer_GetInstance();
    return (cPtr == 0) ? null : new NatPunchthroughServer(cPtr, false);
  }

  public static void DestroyInstance(NatPunchthroughServer i) {
    SLikeNetJNI.NatPunchthroughServer_DestroyInstance(NatPunchthroughServer.getCPtr(i), i);
  }

  public NatPunchthroughServer() {
    this(SLikeNetJNI.new_NatPunchthroughServer(), true);
  }

  public void SetDebugInterface(NatPunchthroughServerDebugInterface i) {
    SLikeNetJNI.NatPunchthroughServer_SetDebugInterface(swigCPtr, this, NatPunchthroughServerDebugInterface.getCPtr(i), i);
  }

  static public class ConnectionAttempt {
    private transient long swigCPtr;
    protected transient boolean swigCMemOwn;
  
    protected ConnectionAttempt(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(ConnectionAttempt obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    @SuppressWarnings("deprecation")
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          SLikeNetJNI.delete_NatPunchthroughServer_ConnectionAttempt(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    public ConnectionAttempt() {
      this(SLikeNetJNI.new_NatPunchthroughServer_ConnectionAttempt(), true);
    }
  
    public void setSender(NatPunchthroughServer.User value) {
      SLikeNetJNI.NatPunchthroughServer_ConnectionAttempt_sender_set(swigCPtr, this, NatPunchthroughServer.User.getCPtr(value), value);
    }
  
    public NatPunchthroughServer.User getSender() {
      long cPtr = SLikeNetJNI.NatPunchthroughServer_ConnectionAttempt_sender_get(swigCPtr, this);
      return (cPtr == 0) ? null : new NatPunchthroughServer.User(cPtr, false);
    }
  
    public void setRecipient(NatPunchthroughServer.User value) {
      SLikeNetJNI.NatPunchthroughServer_ConnectionAttempt_recipient_set(swigCPtr, this, NatPunchthroughServer.User.getCPtr(value), value);
    }
  
    public NatPunchthroughServer.User getRecipient() {
      long cPtr = SLikeNetJNI.NatPunchthroughServer_ConnectionAttempt_recipient_get(swigCPtr, this);
      return (cPtr == 0) ? null : new NatPunchthroughServer.User(cPtr, false);
    }
  
    public void setSessionId(int value) {
      SLikeNetJNI.NatPunchthroughServer_ConnectionAttempt_sessionId_set(swigCPtr, this, value);
    }
  
    public int getSessionId() {
      return SLikeNetJNI.NatPunchthroughServer_ConnectionAttempt_sessionId_get(swigCPtr, this);
    }
  
    public void setStartTime(java.math.BigInteger value) {
      SLikeNetJNI.NatPunchthroughServer_ConnectionAttempt_startTime_set(swigCPtr, this, value);
    }
  
    public java.math.BigInteger getStartTime() {
      return SLikeNetJNI.NatPunchthroughServer_ConnectionAttempt_startTime_get(swigCPtr, this);
    }
  
    public void setAttemptPhase(int value) {
      SLikeNetJNI.NatPunchthroughServer_ConnectionAttempt_attemptPhase_set(swigCPtr, this, value);
    }
  
    public int getAttemptPhase() {
      return SLikeNetJNI.NatPunchthroughServer_ConnectionAttempt_attemptPhase_get(swigCPtr, this);
    }
  
    public final static int NAT_ATTEMPT_PHASE_NOT_STARTED = SLikeNetJNI.NatPunchthroughServer_ConnectionAttempt_NAT_ATTEMPT_PHASE_NOT_STARTED_get();
    public final static int NAT_ATTEMPT_PHASE_GETTING_RECENT_PORTS = SLikeNetJNI.NatPunchthroughServer_ConnectionAttempt_NAT_ATTEMPT_PHASE_GETTING_RECENT_PORTS_get();
  
  }

  static public class User {
    private transient long swigCPtr;
    protected transient boolean swigCMemOwn;
  
    protected User(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(User obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    @SuppressWarnings("deprecation")
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          SLikeNetJNI.delete_NatPunchthroughServer_User(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    public void setGuid(RakNetGUID value) {
      SLikeNetJNI.NatPunchthroughServer_User_guid_set(swigCPtr, this, RakNetGUID.getCPtr(value), value);
    }
  
    public RakNetGUID getGuid() {
      long cPtr = SLikeNetJNI.NatPunchthroughServer_User_guid_get(swigCPtr, this);
      return (cPtr == 0) ? null : new RakNetGUID(cPtr, false);
    }
  
    public void setSystemAddress(SystemAddress value) {
      SLikeNetJNI.NatPunchthroughServer_User_systemAddress_set(swigCPtr, this, SystemAddress.getCPtr(value), value);
    }
  
    public SystemAddress getSystemAddress() {
      long cPtr = SLikeNetJNI.NatPunchthroughServer_User_systemAddress_get(swigCPtr, this);
      return (cPtr == 0) ? null : new SystemAddress(cPtr, false);
    }
  
    public void setMostRecentPort(int value) {
      SLikeNetJNI.NatPunchthroughServer_User_mostRecentPort_set(swigCPtr, this, value);
    }
  
    public int getMostRecentPort() {
      return SLikeNetJNI.NatPunchthroughServer_User_mostRecentPort_get(swigCPtr, this);
    }
  
    public void setIsReady(boolean value) {
      SLikeNetJNI.NatPunchthroughServer_User_isReady_set(swigCPtr, this, value);
    }
  
    public boolean getIsReady() {
      return SLikeNetJNI.NatPunchthroughServer_User_isReady_get(swigCPtr, this);
    }
  
    public void setGroupPunchthroughRequests(SWIGTYPE_p_DataStructures__OrderedListT_SLNet__RakNetGUID_SLNet__RakNetGUID_t value) {
      SLikeNetJNI.NatPunchthroughServer_User_groupPunchthroughRequests_set(swigCPtr, this, SWIGTYPE_p_DataStructures__OrderedListT_SLNet__RakNetGUID_SLNet__RakNetGUID_t.getCPtr(value));
    }
  
    public SWIGTYPE_p_DataStructures__OrderedListT_SLNet__RakNetGUID_SLNet__RakNetGUID_t getGroupPunchthroughRequests() {
      long cPtr = SLikeNetJNI.NatPunchthroughServer_User_groupPunchthroughRequests_get(swigCPtr, this);
      return (cPtr == 0) ? null : new SWIGTYPE_p_DataStructures__OrderedListT_SLNet__RakNetGUID_SLNet__RakNetGUID_t(cPtr, false);
    }
  
    public void setConnectionAttempts(SWIGTYPE_p_DataStructures__ListT_SLNet__NatPunchthroughServer__ConnectionAttempt_p_t value) {
      SLikeNetJNI.NatPunchthroughServer_User_connectionAttempts_set(swigCPtr, this, SWIGTYPE_p_DataStructures__ListT_SLNet__NatPunchthroughServer__ConnectionAttempt_p_t.getCPtr(value));
    }
  
    public SWIGTYPE_p_DataStructures__ListT_SLNet__NatPunchthroughServer__ConnectionAttempt_p_t getConnectionAttempts() {
      long cPtr = SLikeNetJNI.NatPunchthroughServer_User_connectionAttempts_get(swigCPtr, this);
      return (cPtr == 0) ? null : new SWIGTYPE_p_DataStructures__ListT_SLNet__NatPunchthroughServer__ConnectionAttempt_p_t(cPtr, false);
    }
  
    public boolean HasConnectionAttemptToUser(NatPunchthroughServer.User user) {
      return SLikeNetJNI.NatPunchthroughServer_User_HasConnectionAttemptToUser(swigCPtr, this, NatPunchthroughServer.User.getCPtr(user), user);
    }
  
    public void DerefConnectionAttempt(NatPunchthroughServer.ConnectionAttempt ca) {
      SLikeNetJNI.NatPunchthroughServer_User_DerefConnectionAttempt(swigCPtr, this, NatPunchthroughServer.ConnectionAttempt.getCPtr(ca), ca);
    }
  
    public void DeleteConnectionAttempt(NatPunchthroughServer.ConnectionAttempt ca) {
      SLikeNetJNI.NatPunchthroughServer_User_DeleteConnectionAttempt(swigCPtr, this, NatPunchthroughServer.ConnectionAttempt.getCPtr(ca), ca);
    }
  
    public void LogConnectionAttempts(RakString rs) {
      SLikeNetJNI.NatPunchthroughServer_User_LogConnectionAttempts(swigCPtr, this, RakString.getCPtr(rs), rs);
    }
  
    public User() {
      this(SLikeNetJNI.new_NatPunchthroughServer_User(), true);
    }
  
  }

  public void setLastUpdate(java.math.BigInteger value) {
    SLikeNetJNI.NatPunchthroughServer_lastUpdate_set(swigCPtr, this, value);
  }

  public java.math.BigInteger getLastUpdate() {
    return SLikeNetJNI.NatPunchthroughServer_lastUpdate_get(swigCPtr, this);
  }

}
