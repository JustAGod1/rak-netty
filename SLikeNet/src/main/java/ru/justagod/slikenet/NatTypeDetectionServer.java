/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package ru.justagod.slikenet;

public class NatTypeDetectionServer extends PluginInterface2 {
  private transient long swigCPtr;

  protected NatTypeDetectionServer(long cPtr, boolean cMemoryOwn) {
    super(SLikeNetJNI.NatTypeDetectionServer_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(NatTypeDetectionServer obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        SLikeNetJNI.delete_NatTypeDetectionServer(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public static NatTypeDetectionServer GetInstance() {
    long cPtr = SLikeNetJNI.NatTypeDetectionServer_GetInstance();
    return (cPtr == 0) ? null : new NatTypeDetectionServer(cPtr, false);
  }

  public static void DestroyInstance(NatTypeDetectionServer i) {
    SLikeNetJNI.NatTypeDetectionServer_DestroyInstance(NatTypeDetectionServer.getCPtr(i), i);
  }

  public NatTypeDetectionServer() {
    this(SLikeNetJNI.new_NatTypeDetectionServer(), true);
  }

  public void Startup(String nonRakNetIP2, String nonRakNetIP3, String nonRakNetIP4) {
    SLikeNetJNI.NatTypeDetectionServer_Startup(swigCPtr, this, nonRakNetIP2, nonRakNetIP3, nonRakNetIP4);
  }

  public void Shutdown() {
    SLikeNetJNI.NatTypeDetectionServer_Shutdown(swigCPtr, this);
  }

  static public class NATDetectionAttempt {
    private transient long swigCPtr;
    protected transient boolean swigCMemOwn;
  
    protected NATDetectionAttempt(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(NATDetectionAttempt obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    @SuppressWarnings("deprecation")
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          SLikeNetJNI.delete_NatTypeDetectionServer_NATDetectionAttempt(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    public void setSystemAddress(SystemAddress value) {
      SLikeNetJNI.NatTypeDetectionServer_NATDetectionAttempt_systemAddress_set(swigCPtr, this, SystemAddress.getCPtr(value), value);
    }
  
    public SystemAddress getSystemAddress() {
      long cPtr = SLikeNetJNI.NatTypeDetectionServer_NATDetectionAttempt_systemAddress_get(swigCPtr, this);
      return (cPtr == 0) ? null : new SystemAddress(cPtr, false);
    }
  
    public void setDetectionState(NatTypeDetectionServer.NATDetectionState value) {
      SLikeNetJNI.NatTypeDetectionServer_NATDetectionAttempt_detectionState_set(swigCPtr, this, value.swigValue());
    }
  
    public NatTypeDetectionServer.NATDetectionState getDetectionState() {
      return NatTypeDetectionServer.NATDetectionState.swigToEnum(SLikeNetJNI.NatTypeDetectionServer_NATDetectionAttempt_detectionState_get(swigCPtr, this));
    }
  
    public void setNextStateTime(SWIGTYPE_p_unsigned___int32 value) {
      SLikeNetJNI.NatTypeDetectionServer_NATDetectionAttempt_nextStateTime_set(swigCPtr, this, SWIGTYPE_p_unsigned___int32.getCPtr(value));
    }
  
    public SWIGTYPE_p_unsigned___int32 getNextStateTime() {
      return new SWIGTYPE_p_unsigned___int32(SLikeNetJNI.NatTypeDetectionServer_NATDetectionAttempt_nextStateTime_get(swigCPtr, this), true);
    }
  
    public void setTimeBetweenAttempts(SWIGTYPE_p_unsigned___int32 value) {
      SLikeNetJNI.NatTypeDetectionServer_NATDetectionAttempt_timeBetweenAttempts_set(swigCPtr, this, SWIGTYPE_p_unsigned___int32.getCPtr(value));
    }
  
    public SWIGTYPE_p_unsigned___int32 getTimeBetweenAttempts() {
      return new SWIGTYPE_p_unsigned___int32(SLikeNetJNI.NatTypeDetectionServer_NATDetectionAttempt_timeBetweenAttempts_get(swigCPtr, this), true);
    }
  
    public void setC2Port(int value) {
      SLikeNetJNI.NatTypeDetectionServer_NATDetectionAttempt_c2Port_set(swigCPtr, this, value);
    }
  
    public int getC2Port() {
      return SLikeNetJNI.NatTypeDetectionServer_NATDetectionAttempt_c2Port_get(swigCPtr, this);
    }
  
    public void setGuid(RakNetGUID value) {
      SLikeNetJNI.NatTypeDetectionServer_NATDetectionAttempt_guid_set(swigCPtr, this, RakNetGUID.getCPtr(value), value);
    }
  
    public RakNetGUID getGuid() {
      long cPtr = SLikeNetJNI.NatTypeDetectionServer_NATDetectionAttempt_guid_get(swigCPtr, this);
      return (cPtr == 0) ? null : new RakNetGUID(cPtr, false);
    }
  
    public NATDetectionAttempt() {
      this(SLikeNetJNI.new_NatTypeDetectionServer_NATDetectionAttempt(), true);
    }
  
  }

  public void OnRNS2Recv(SWIGTYPE_p_RNS2RecvStruct recvStruct) {
    SLikeNetJNI.NatTypeDetectionServer_OnRNS2Recv(swigCPtr, this, SWIGTYPE_p_RNS2RecvStruct.getCPtr(recvStruct));
  }

  public void DeallocRNS2RecvStruct(SWIGTYPE_p_RNS2RecvStruct s, String file, long line) {
    SLikeNetJNI.NatTypeDetectionServer_DeallocRNS2RecvStruct(swigCPtr, this, SWIGTYPE_p_RNS2RecvStruct.getCPtr(s), file, line);
  }

  public SWIGTYPE_p_RNS2RecvStruct AllocRNS2RecvStruct(String file, long line) {
    long cPtr = SLikeNetJNI.NatTypeDetectionServer_AllocRNS2RecvStruct(swigCPtr, this, file, line);
    return (cPtr == 0) ? null : new SWIGTYPE_p_RNS2RecvStruct(cPtr, false);
  }

  public final static class NATDetectionState {
    public final static NatTypeDetectionServer.NATDetectionState STATE_NONE = new NatTypeDetectionServer.NATDetectionState("STATE_NONE");
    public final static NatTypeDetectionServer.NATDetectionState STATE_TESTING_NONE_1 = new NatTypeDetectionServer.NATDetectionState("STATE_TESTING_NONE_1");
    public final static NatTypeDetectionServer.NATDetectionState STATE_TESTING_NONE_2 = new NatTypeDetectionServer.NATDetectionState("STATE_TESTING_NONE_2");
    public final static NatTypeDetectionServer.NATDetectionState STATE_TESTING_FULL_CONE_1 = new NatTypeDetectionServer.NATDetectionState("STATE_TESTING_FULL_CONE_1");
    public final static NatTypeDetectionServer.NATDetectionState STATE_TESTING_FULL_CONE_2 = new NatTypeDetectionServer.NATDetectionState("STATE_TESTING_FULL_CONE_2");
    public final static NatTypeDetectionServer.NATDetectionState STATE_TESTING_ADDRESS_RESTRICTED_1 = new NatTypeDetectionServer.NATDetectionState("STATE_TESTING_ADDRESS_RESTRICTED_1");
    public final static NatTypeDetectionServer.NATDetectionState STATE_TESTING_ADDRESS_RESTRICTED_2 = new NatTypeDetectionServer.NATDetectionState("STATE_TESTING_ADDRESS_RESTRICTED_2");
    public final static NatTypeDetectionServer.NATDetectionState STATE_TESTING_PORT_RESTRICTED_1 = new NatTypeDetectionServer.NATDetectionState("STATE_TESTING_PORT_RESTRICTED_1");
    public final static NatTypeDetectionServer.NATDetectionState STATE_TESTING_PORT_RESTRICTED_2 = new NatTypeDetectionServer.NATDetectionState("STATE_TESTING_PORT_RESTRICTED_2");
    public final static NatTypeDetectionServer.NATDetectionState STATE_DONE = new NatTypeDetectionServer.NATDetectionState("STATE_DONE");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static NATDetectionState swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + NATDetectionState.class + " with value " + swigValue);
    }

    private NATDetectionState(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private NATDetectionState(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private NATDetectionState(String swigName, NATDetectionState swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static NATDetectionState[] swigValues = { STATE_NONE, STATE_TESTING_NONE_1, STATE_TESTING_NONE_2, STATE_TESTING_FULL_CONE_1, STATE_TESTING_FULL_CONE_2, STATE_TESTING_ADDRESS_RESTRICTED_1, STATE_TESTING_ADDRESS_RESTRICTED_2, STATE_TESTING_PORT_RESTRICTED_1, STATE_TESTING_PORT_RESTRICTED_2, STATE_DONE };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
